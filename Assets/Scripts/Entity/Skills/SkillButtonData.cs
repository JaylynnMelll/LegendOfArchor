using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;
using UnityEngine.Events;
using UnityEngine.UI;

/// <summary>
/// Skill UIï¿½ï¿½ ï¿½Ö´ï¿½ 3ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½Æ°ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ ï¿½Ò´ï¿½Ç¾ï¿½
/// ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½Ãµï¿½ ï¿½ï¿½Å³ï¿½ï¿½ UIï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½Ö°ï¿½, ï¿½ï¿½ ï¿½ï¿½Å³ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö´ï¿½ ï¿½ï¿½Å©ï¿½ï¿½Æ®.
/// </summary>
public class SkillButtonData : MonoBehaviour
{
    [Header("Connected Components")]
    [SerializeField] private PlayerSkillHandler playerSkillHandler;
    [SerializeField] private RangeWeaponHandler rangeWeaponHandler;     // Dynamically assigned
    [SerializeField] private Cooldown cooldown;


    [Header("UI Components")]
    public Button button;
    public Image skillIcon;
    public TextMeshProUGUI skillNameText;
    public Skill assignedSkill;

    [Header("Skill Applying Events")]
    public UnityEvent ApplyingSkillToStats;

    private IEnumerator Start()
    {
        yield return new WaitForSeconds(0.1f);
        rangeWeaponHandler = FindObjectOfType<RangeWeaponHandler>();
        Debug.Log("RangeWeaponHandler found and assigned to SkillButtonData.");

        if (rangeWeaponHandler != null)
        {
            // Prevention of multiple event calls on scene reload
            ApplyingSkillToStats.RemoveAllListeners();

            // ApplyingSKillToStatsÀÌº¥Æ®¿¡ ¸Þ¼­µå Ãß°¡ (Dynamically assigned)
            ApplyingSkillToStats.AddListener(rangeWeaponHandler.ResetStats);
            ApplyingSkillToStats.AddListener(rangeWeaponHandler.ApplyFinalStats);
        }
    }

    /// <summary>
    /// SkillButtonDataï¿½ï¿½ ï¿½ï¿½ ï¿½ï¿½Æ°ï¿½ï¿½ ï¿½ï¿½Å³ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö´ï¿½ ï¿½Þ¼ï¿½ï¿½ï¿½.
    /// </summary>
    /// <param name="skill"></param>
    public void SetSkillDataToButton(Skill skill)
    {
        skillIcon.sprite = skill.icon;
        skillNameText.text = skill.skillName;
        assignedSkill = skill;
    }

    /// <summary>
    /// ï¿½ï¿½Å³ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½Æ°ï¿½ï¿½ Å¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½Å³ï¿½ï¿½ 
    /// Playerï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö´ï¿½ ï¿½Þ¼ï¿½ï¿½ï¿½.
    /// </summary>
    public void AddSkillOnClick()
    {
        // ï¿½ï¿½Å³ ï¿½ï¿½Æ°ï¿½ï¿½ ï¿½Ù½ï¿½ È°ï¿½ï¿½È­ ï¿½Ç±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½Ù¿ï¿½ ï¿½Ã°ï¿½ï¿½ï¿½ Ã¼Å©
        if (cooldown.IsCoolingDown)
        {
#if UNITY_EDITOR
            Debug.Log("It's cooling down!");
#endif
            return;
        }

        playerSkillHandler.SkillAcquired(assignedSkill);
        ApplyingSkillsToStats();
        GameManager.instance.SkillAdded();

        // ï¿½ï¿½Ù¿ï¿½ ï¿½ï¿½ï¿½ï¿½
        cooldown.StartCoolingDown();
    }

    public void ApplyingSkillsToStats()
    {
        Debug.Log("Skills are Applied to Stats!");
        ApplyingSkillToStats?.Invoke();
    }
}
